---
const { buttonName } = Astro.props;
---

<li class="headerNavDropdownWrapper">
    <button
        type="button"
        class="headerNavDropdownButton"
        aria-haspopup="true"
        aria-expanded="false"
        >{buttonName}
    </button>
    <ul class="hidden">
        <slot />
    </ul>
</li>

<style>
    li.headerNavDropdownWrapper:not(:last-of-type):after {
        padding-left: 20px;
        content: "|";
        font-weight: 400;
        color: white;
        position: absolute;
        top: 1.65rem;
        right: -1px;
    }
    li {
        display: flex;
        align-items: center;
        flex-basis: 50px;
        flex-shrink: 0;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        align-self: flex-start;
        position: relative;
    }
    ul {
        display: flex;
        flex-direction: column;
        background-color: var(--primary-color);
        padding: 0px 20px 0px 20px;
        position: relative;
        top: clamp(10px, -25px + (var(--header-height) / 2), 25px);
        transition: 0.25s;
    }
    ul.hidden {
        display: none;
    }
    /*Removing default button styling*/
    button {
        display: inline-block;
        border: none;
        text-decoration: none;
        font-size: 1.4rem;
        cursor: pointer;
        text-align: center;
        background-color: var(--primary-color);
    }
    /*Button Styling*/
    button {
        font-family: Montserrat;
        text-transform: uppercase;
        font-weight: 700;
        color: white;
        padding: 0px 20px 0px 20px;
        flex-basis: 50px;
    }
</style>
<script>
    const headerNavButtons = document.querySelectorAll(
        ".headerNavDropdownButton"
    );
    headerNavButtons.forEach((button) => {
        button.addEventListener("click", (event) => {
            // @ts-ignore
            event.target.nextElementSibling.classList.toggle("hidden");
        });
    });
</script>
